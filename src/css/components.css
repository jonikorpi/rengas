#log {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  z-index: 9999;
  pointer-events: none;
  padding: 0.5rem;
  line-height: 0.75rem;
  font-size: 0.618rem;
}

.world {
  display: grid;
  align-items: center;
  justify-items: center;
  min-height: 100vh;
  overflow: hidden;

  /* should match top/bottom UI height */
  /* or could be avoided using position:sticky maybe */
  padding: 9vmin 0;
}

.region {
  --width: 3;
  --height: 3;
  --unit: calc(100 / (var(--width) + 0.5) * 1vmin);
  --perspective: 1px;
  width: calc(var(--width) * var(--unit));
  height: calc(var(--height) * var(--unit));
  position: relative;
}

.statics {
  display: grid;
  grid: repeat(var(--height), var(--unit)) / repeat(var(--width), var(--unit));
}

/* .grid.notActive {
  --offsetX: 0;
  --offsetY: 0;
  position: absolute;
  left: calc(var(--offsetX) * var(--unit));
  top: calc(var(--offsetY) * var(--unit));
} */

.static,
.dynamic {
  --x: 0;
  --y: 0;
  --z: 0;
  --width: 1;
  --height: 1;
  width: calc(var(--width) * var(--unit));
  height: calc(var(--height) * var(--unit));
  z-index: calc(100 + var(--z));
}

.static {
  position: relative;
  grid-area: calc(var(--y) + 1) / calc(var(--x) + 1);
}

.dynamic {
  pointer-events: none;
  position: absolute;
  left: 0;
  top: 0;
  /* transition: transform 414ms; */
  will-change: transform;
  transform: translate3d(
      calc((0.5 + var(--x)) * var(--unit)),
      calc((0.5 + var(--y)) * var(--unit) - var(--z) * var(--perspective)),
      0
    )
    translate(-50%, -50%);
}

.tileButton {
  width: 100%;
  height: 100%;
  outline: none;
  color: rgba(255, 255, 255, 0.382);
  font-size: 10px;
}
