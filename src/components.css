.hidden {
  opacity: 0;
}

.logoUI {
  position: fixed;
  top: 0.5rem;
  right: 0.5rem;
  display: flex;
  flex-direction: column;
  font-size: 0.5rem;
  z-index: 100;
}

@supports (top: max(1px, env(safe-area-inset-top))) {
  .logoUI {
    top: max(0.5rem, env(safe-area-inset-top));
    right: max(0.5rem, env(safe-area-inset-right));
  }
}

.gameUI {
  pointer-events: none;
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  padding: 0.5rem 0.5rem 0;
  z-index: 100;
}

@supports (padding-top: max(1px, env(safe-area-inset-top))) {
  .gameUI {
    padding: max(0.5rem, env(safe-area-inset-top))
      max(0.5rem, env(safe-area-inset-right)) 0
      max(0.5rem, env(safe-area-inset-left));
  }
}

.turnBar {
  height: 0.25rem;
  position: absolute;
  left: 0;
  top: 0;
  right: 0;
  overflow: hidden;
  transform: translateZ(0);
  will-change: transform;
}

.turnBarFill {
  position: absolute;
  left: -1px;
  top: 0;
  right: -1px;
  bottom: 0;
  border: 1px solid var(--black);
  background-color: var(--white);
  will-change: transform;
  animation: tempTurnBarFill 60s linear infinite both;
  transform-origin: right;
}

.turnBarFill.danger {
  background-color: var(--danger);
}

@keyframes tempTurnBarFill {
  to {
    transform: scale3d(0, 1, 1);
  }
}

.turnUI {
}

.playerUI {
  pointer-events: none;
  position: fixed;
  top: 0.5rem;
  left: 0;
  right: 0;
  display: flex;
  justify-content: center;
  z-index: 100;
}

@supports (top: max(1px, env(safe-area-inset-top))) {
  .playerUI {
    top: max(0.5rem, env(safe-area-inset-top));
  }
}

.vision {
  --tileHeight: 0.666vh;
  user-select: none;
  width: 100%;
  overflow: hidden;
  position: relative;
  height: calc(var(--visionLength) * var(--tileSize) * var(--tileHeight));
  max-height: calc(var(--visionLength) * var(--tileSize) * 1vw);
  min-height: calc(var(--visionLength) * var(--tileSize) * 0.333vw);
  margin-top: 2rem;
  margin-bottom: 2rem;
}

@supports (top: max(1px, env(safe-area-inset-top))) {
  .vision {
    margin-top: max(2rem, env(safe-area-inset-top));
    margin-bottom: max(2rem, env(safe-area-inset-bottom));
  }
}

.locations,
.units,
.halfShrouds {
  width: calc(var(--tileSize) * 1vw);
  height: calc(var(--tileSize) * var(--tileHeight));
  max-height: calc(var(--tileSize) * 1vw);
  min-height: calc(var(--tileSize) * 0.333vw);
  position: absolute;
}

.halfShrouds {
  opacity: 0.414;
}

.tile,
.unit,
.shroud,
.unitIndicator {
  position: absolute;
  left: 0;
  top: 0;
  width: 100%;
  height: 100%;
}

.tile,
.shroud,
.unitIndicator {
  left: calc(var(--x) * 100%);
  top: calc((var(--y) - var(--visionMin)) * 100%);
}

.unit {
  z-index: 10; /* TEMPORARY */
  will-change: transform;
  transform: translate3d(
    calc(var(--x) * 100%),
    calc((var(--y) - var(--visionMin)) * 100%),
    0
  );
}

.unitIndicator {
  z-index: 10; /* TEMPORARY */
}

.shroud {
  z-index: var(--shroudLevel);
}

.wall {
  position: absolute;
  top: 0;
  left: calc(var(--edgeDirection) * 100%);
  width: 100%;
  height: 100%;
}

.svgContainer {
  position: absolute;
  left: calc(var(--tileCanvasMultiplier) * 100% / -4);
  top: calc(var(--tileCanvasMultiplier) * 100% / -4);
  width: calc(var(--tileCanvasMultiplier) * 100%);
  height: calc(var(--tileCanvasMultiplier) * 100%);
  transform: translateY(calc(var(--z) * 0.333 * (0.5vmin - 1vw)));
  pointer-events: none;
  /* Slows scrolling! */ /*will-change: transform;*/
}

.svg {
  position: absolute;
  left: 0;
  top: 0;
  width: 100%;
  height: 100%;
  /* Slows scrolling! */ /*will-change: transform;*/
}

.waterLine .svg {
  /*animation: waterLine 2.5s ease-out calc(var(--random) * 1s) infinite alternate
    both;*/
}

@keyframes waterLine {
  from {
    transform: scale3d(0.944, 0.944, 0.944);
  }
  to {
    transform: scale3d(1.034, 1.034, 1.034);
  }
}
