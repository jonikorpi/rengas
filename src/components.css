.hidden {
  opacity: 0;
}

.logoUI {
  position: fixed;
  top: 0.5rem;
  right: 0.5rem;
  top: max(0.5rem, constant(safe-area-inset-top));
  right: max(0.5rem, constant(safe-area-inset-right));
  display: flex;
  flex-direction: column;
  font-size: 0.5rem;
}

.gameUI {
  pointer-events: none;
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  padding: 0.5rem 0.5rem 0;
  padding: max(0.5rem, constant(safe-area-inset-top))
    max(0.5rem, constant(safe-area-inset-right)) 0
    max(0.5rem, constant(safe-area-inset-left));
}

.turnBar {
  height: 0.25rem;
  position: absolute;
  left: 0;
  top: 0;
  right: 0;
  overflow: hidden;
  transform: translateZ(0);
  will-change: transform;
}

.turnBarFill {
  position: absolute;
  left: -1px;
  top: 0;
  right: -1px;
  bottom: 0;
  border: 1px solid var(--black);
  background-color: var(--white);
  will-change: transform;
  animation: tempTurnBarFill 60s linear infinite both;
}

.turnBarFill.danger {
  background-color: var(--danger);
}

@keyframes tempTurnBarFill {
  to {
    transform: translate3d(100%, 0, 0);
  }
}

.turnUI {
}

.playerUI {
  pointer-events: none;
  position: fixed;
  top: 0.5rem;
  top: max(0.5rem, constant(safe-area-inset-top));
  left: 0;
  right: 0;
  display: flex;
  justify-content: center;
}

.manaBar {
  display: flex;
  justify-content: center;
  align-items: center;
  position: relative;
}

.mana {
  width: 1rem;
  height: 1rem;
  background-color: var(--black);
  border: 1px solid var(--white);
  border-radius: 50%;
  transform: scale(0.382);
  color: transparent;
  text-align: center;
  transition: 100ms ease-out;
  transition-property: transform, background-color, color;
  font-size: 0.666rem;
  font-weight: bold;
}

.mana.filled {
  background-color: var(--white);
  border-color: var(--black);
  transform: scale(0.764);
}

.mana.current {
  color: var(--black);
}

.world {
  overflow: hidden;
  pointer-events: none;
  position: relative;
  outline: 1px solid;
  --tileHeight: 0.618vh;
  height: calc(var(--worldLength) * var(--tileSize) * var(--tileHeight));
  max-height: calc(var(--worldLength) * var(--tileSize) * 1vw);
  min-height: calc(var(--worldLength) * var(--tileSize) * 0.25vw);
}

.worldSizer {
  width: calc(var(--tileSize) * 1vw);
  height: calc(var(--tileSize) * var(--tileHeight));
  max-height: calc(var(--tileSize) * 1vw);
  min-height: calc(var(--tileSize) * 0.25vw);
  position: relative;
}

.tile,
.unit,
.shroud {
  position: absolute;
  left: 0;
  top: 0;
  width: 100%;
  height: 100%;
}

.tile,
.shroud {
  left: calc(var(--x) * 100%);
  top: calc(var(--y) * 100%);
}

.unit {
  will-change: transform;
  transform: translate3d(calc(var(--x) * 100%), calc(var(--y) * 100%), 0);
}

.shroud {
  z-index: var(--shroudLevel);
}

.svg {
  position: absolute;
  left: calc(var(--tileCanvasMultiplier) * 100% / -4);
  top: calc(var(--tileCanvasMultiplier) * 100% / -4);
  width: calc(var(--tileCanvasMultiplier) * 100%);
  height: calc(var(--tileCanvasMultiplier) * 100%);
  transform: translateY(calc(var(--z) * (-1vw + 0.75vmin)))
    scale(calc(1 + (var(--scale)) * 0.021));
}

.debug {
  font-size: 0.5rem;
  line-height: 0.75rem;
  white-space: pre;
  position: absolute;
  left: 0;
  top: 0;
  right: 0;
  bottom: 0;
  opacity: 0;
  background-color: var(--black);
  padding: 0.5rem;
}

.debug:hover {
  opacity: 1;
  z-index: 100;
  right: auto;
  bottom: auto;
}
